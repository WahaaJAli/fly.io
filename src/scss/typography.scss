@use "sass:map";
@use 'variables' as *;

/* TYPOGRAPHY */

*, *::before, *::after {
  box-sizing: border-box;
}

::placeholder {
  color: $color-primary-100;
}

::selection {
  background: $color-secondary;
  color: $white;
  -webkit-text-fill-color: $white;
}

html {
  font-size: 62.5%;
}

body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  color: $color-body;
  font-family: $font-stack;
  font-size: 2rem;
  height: auto;
  margin: 0;
  min-height: 100vh;
  place-items: center;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
}

h1, h2, h3 {
  color: $color-heading;
  margin-bottom: 1rem;
}

ul {
  padding-right: 4rem;
}

.cursor-pointer {
  cursor: pointer;
}

/* HEADINGS */
@for $h from 1 through 6 {
  $size: if($h == 1, 6, if($h == 2, 5, if($h == 3, 4, if($h == 4, 3, if($h == 5, 2.5, 2)))));
  h#{$h} {
    font-size: #{$size}rem;
  }
}

/* TEXTS */
p {
  margin: 0;
  font-size: 2rem;
  color: $color-body-light;
}

$text-sizes: (
        1xl: (font-size: 2rem,   line-height: 2.8rem),
        2xl: (font-size: 2.4rem, line-height: 3.8rem),
        3xl: (font-size: 3rem,   line-height: 5rem),
        4xl: (font-size: 3.6rem, line-height: 6rem)
);

@each $size, $values in $text-sizes {
  .text-#{$size} {
    font-size: map.get($values, font-size);
    line-height: map.get($values, line-height);
  }
}

.font-bold {
  font-weight: bold;
}

.text-wide {
  letter-spacing: .16rem;
}

.paragraph-center {
  padding: 0 29vw;
  text-align: center;
  margin: 2rem 0;
}

.gradient-text {
  background: $gradient-primary;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
  font-weight: 500;
}

%prompt {
  font-size: 60%;
  font-style: italic;
  font-weight: 300;
}

.prompt {
  @extend %prompt;
}

.error-prompt {
  @extend %prompt;
  color: map.get($theme-colors, danger);
  padding: 0;

  &::selection {
    background-color: map.get($theme-colors, danger);
    color: white;
  }

  &.animated {
    animation: slideIn_Down 1s linear;
  }
}

.list-prompt {
  @extend %prompt;
  padding: 1rem;
}

/* DISPLAY */
%flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.align-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-around {
  justify-content: space-around;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.self-center {
  align-self: center;
}

.text-center {
  text-align: center;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.overflow-hidden {
  overflow: hidden;
}

/* SPACINGS */
.m-0 {
  margin: 0;
}

.m-1 {
  margin: 1rem;
}

.m-4 {
  margin: 4rem;
}

.mx-2 {
  $size: 2rem;
  margin-right: $size;
  margin-left: $size;
}

.mx-2-h {
  $size: 2.5rem;
  margin-right: $size;
  margin-left: $size;
}

.mx-auto {
  $size: auto;
  margin-right: $size;
  margin-left: $size;
}

.my-2 {
  $size: 2rem;
  margin-top: $size;
  margin-bottom: $size;
}

.my-4 {
  $size: 4rem;
  margin-top: $size;
  margin-bottom: $size;
}

.mt-0 {
  margin-top: 0;
}

.mt-1 {
  margin-top: 1rem;
}

.mt-2 {
  margin-top: 2rem;
}

.mt-3 {
  margin-top: 4rem;
}

.mt-4 {
  margin-top: 4rem;
}

.mt-7 {
  margin-top: 7rem;
}

.mt-n-10 {
  margin-top: -10rem;
}

.mt-n-14 {
  margin-top: -14rem;
}

.mr-2 {
  margin-right: 2rem;
}

.mr-3 {
  margin-right: 3rem;
}

.mb-2 {
  margin-bottom: 2rem;
}

.mb-4 {
  margin-bottom: 4rem;
}

.mb-7 {
  margin-bottom: 7rem;
}

.mb-10 {
  margin-bottom: 10rem;
}

.mb-n-9 {
  margin-bottom: -9rem;
}

.mb-n-10 {
  margin-bottom: -10rem;
}

.ml-1 {
  margin-left: 1rem;
}

.ml-2 {
  margin-left: 2rem;
}

.ml-4 {
  margin-left: 4rem;
}


/* PADDING */
.p-0 {
  padding: 0;
}

.p-1 {
  padding: 1rem;
}

.pr-2 {
  padding-right: 2rem;
}

.px-5 {
  $size: 5rem;
  padding-left: $size;
  padding-right: $size;
}


/* WIDTHS */
.width-20 {
  width: 20vw;
}

.width-30 {
  width: 30vw;
}

.width-40 {
  width: 40vw;
}

.width-50 {
  width: 50vw;
}

.width-60 {
  width: 60vw;
}

.width-70 {
  width: 70vw;
}

.width-80 {
  width: 80vw;
}

.width-90 {
  width: 90vw;
}